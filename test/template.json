{
  "Resources": {
    "myvpc632CA88B": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc"
          }
        ]
      }
    },
    "myvpcPublicSubnet1SubnetE2DAA156": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet1"
          }
        ]
      }
    },
    "myvpcPublicSubnet1RouteTable8A33B640": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet1"
          }
        ]
      }
    },
    "myvpcPublicSubnet1RouteTableAssociationE9EE9198": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPublicSubnet1RouteTable8A33B640"
        },
        "SubnetId": {
          "Ref": "myvpcPublicSubnet1SubnetE2DAA156"
        }
      }
    },
    "myvpcPublicSubnet1DefaultRoute541095B8": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPublicSubnet1RouteTable8A33B640"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "myvpcIGW2E52BF2F"
        }
      },
      "DependsOn": [
        "myvpcVPCGW8FDE359B"
      ]
    },
    "myvpcPublicSubnet1EIPFACB5379": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet1"
          }
        ]
      }
    },
    "myvpcPublicSubnet1NATGatewayD79F3015": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "myvpcPublicSubnet1SubnetE2DAA156"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "myvpcPublicSubnet1EIPFACB5379",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet1"
          }
        ]
      },
      "DependsOn": [
        "myvpcPublicSubnet1DefaultRoute541095B8",
        "myvpcPublicSubnet1RouteTableAssociationE9EE9198"
      ]
    },
    "myvpcPublicSubnet2SubnetAC1228E3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet2"
          }
        ]
      }
    },
    "myvpcPublicSubnet2RouteTable0532E281": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet2"
          }
        ]
      }
    },
    "myvpcPublicSubnet2RouteTableAssociation1BF1FAEB": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPublicSubnet2RouteTable0532E281"
        },
        "SubnetId": {
          "Ref": "myvpcPublicSubnet2SubnetAC1228E3"
        }
      }
    },
    "myvpcPublicSubnet2DefaultRoute438AD888": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPublicSubnet2RouteTable0532E281"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "myvpcIGW2E52BF2F"
        }
      },
      "DependsOn": [
        "myvpcVPCGW8FDE359B"
      ]
    },
    "myvpcPublicSubnet2EIP766CF0F6": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet2"
          }
        ]
      }
    },
    "myvpcPublicSubnet2NATGatewayD80F7867": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "myvpcPublicSubnet2SubnetAC1228E3"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "myvpcPublicSubnet2EIP766CF0F6",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PublicSubnet2"
          }
        ]
      },
      "DependsOn": [
        "myvpcPublicSubnet2DefaultRoute438AD888",
        "myvpcPublicSubnet2RouteTableAssociation1BF1FAEB"
      ]
    },
    "myvpcPrivateSubnet1SubnetC2DB5FF8": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PrivateSubnet1"
          }
        ]
      }
    },
    "myvpcPrivateSubnet1RouteTable02B66492": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PrivateSubnet1"
          }
        ]
      }
    },
    "myvpcPrivateSubnet1RouteTableAssociation49BD9818": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPrivateSubnet1RouteTable02B66492"
        },
        "SubnetId": {
          "Ref": "myvpcPrivateSubnet1SubnetC2DB5FF8"
        }
      }
    },
    "myvpcPrivateSubnet1DefaultRouteCCFAFFFB": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPrivateSubnet1RouteTable02B66492"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "myvpcPublicSubnet1NATGatewayD79F3015"
        }
      }
    },
    "myvpcPrivateSubnet2SubnetEC1D7719": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PrivateSubnet2"
          }
        ]
      }
    },
    "myvpcPrivateSubnet2RouteTable95011678": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc/PrivateSubnet2"
          }
        ]
      }
    },
    "myvpcPrivateSubnet2RouteTableAssociationCAD1B140": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPrivateSubnet2RouteTable95011678"
        },
        "SubnetId": {
          "Ref": "myvpcPrivateSubnet2SubnetEC1D7719"
        }
      }
    },
    "myvpcPrivateSubnet2DefaultRoute4C6E9A31": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "myvpcPrivateSubnet2RouteTable95011678"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "myvpcPublicSubnet2NATGatewayD80F7867"
        }
      }
    },
    "myvpcIGW2E52BF2F": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "TestStack/myvpc"
          }
        ]
      }
    },
    "myvpcVPCGW8FDE359B": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "myvpc632CA88B"
        },
        "InternetGatewayId": {
          "Ref": "myvpcIGW2E52BF2F"
        }
      }
    },
    "PublicATestConstructPublicZoneCCF3F7D0": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "example.com."
      }
    },
    "PublicATestConstructPrivateZone5BDD7E4C": {
      "Type": "AWS::Route53::HostedZone",
      "Properties": {
        "Name": "example.com.",
        "VPCs": [
          {
            "VPCId": {
              "Ref": "myvpc632CA88B"
            },
            "VPCRegion": {
              "Ref": "AWS::Region"
            }
          }
        ]
      }
    },
    "PublicATestConstruct8888PublicARecordFAD420DE": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "Name": "example.com.",
        "Type": "A",
        "HostedZoneId": {
          "Ref": "PublicATestConstructPublicZoneCCF3F7D0"
        },
        "ResourceRecords": [
          "8.8.8.8"
        ],
        "TTL": "3600"
      }
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}